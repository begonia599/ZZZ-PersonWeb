# 使用多架构支持的Python基础镜像
FROM --platform=$BUILDPLATFORM python:3.11-slim

WORKDIR /app

# 多架构系统依赖安装
RUN apt-get update && apt-get install -y \
    gcc \
    build-essential \
    libffi-dev \
    python3-dev \
    bash \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 复制requirements.txt
COPY requirements.txt ./

# 多架构优化的pip安装（国外服务器使用官方源）
RUN if [ "$(uname -m)" = "aarch64" ] || [ "$(uname -m)" = "arm64" ]; then \
        pip install --no-cache-dir -r requirements.txt --default-timeout=300; \
    else \
        pip install --no-cache-dir -r requirements.txt --default-timeout=100; \
    fi

# 复制应用代码
COPY . .

# 创建必要的目录
RUN mkdir -p /app/instance /app/uploads

# 设置环境变量
ENV FLASK_APP=run.py
ENV FLASK_ENV=production
ENV PYTHONUNBUFFERED=1

# 暴露端口
EXPOSE 5000

# 生产环境启动命令 - 根据架构调整worker数量
CMD if [ "$(uname -m)" = "aarch64" ] || [ "$(uname -m)" = "arm64" ]; then \
        gunicorn -w 2 -b 0.0.0.0:5000 --log-file - --error-logfile - --timeout 120 "run:app"; \
    else \
        gunicorn -w 4 -b 0.0.0.0:5000 --log-file - --error-logfile - --timeout 120 "run:app"; \
    fi
